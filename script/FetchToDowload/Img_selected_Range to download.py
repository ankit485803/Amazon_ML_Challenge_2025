# -*- coding: utf-8 -*-
"""Img_selected_Range to download.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1diy-YLQZgx2z8PGsJoWm4SzUArUAfMQj
"""

import os
import pandas as pd
import requests
from tqdm import tqdm
from pathlib import Path

# ---- CONFIG ----
csv_path = r"D:/ML Amazon Project/train.csv"  # Path to your CSV file
save_folder = r"D:/ML Amazon Project/Img_20000"  # Folder to save images
num_images = 10000  # Number of images to download (next 10,000 images)
start_index = 10000  # Start index for the next batch of images
# ----------------

# Load dataset
df = pd.read_csv(csv_path)
image_links = df['image_link'].dropna().tolist()

# Select the next 10,000 images (from 10,001 to 20,000)
image_links_batch = image_links[start_index:start_index + num_images]

# Create folder if not exists
os.makedirs(save_folder, exist_ok=True)

# Function to download and save with sequential filename
def download_image(url, folder, index):
    filename = f"{index + 1}.jpg"  # sequential name: 1.jpg, 2.jpg, etc.
    save_path = os.path.join(folder, filename)

    if os.path.exists(save_path):
        return  # Skip if already downloaded

    try:
        response = requests.get(url, timeout=10)
        if response.status_code == 200:
            with open(save_path, 'wb') as f:
                f.write(response.content)
        else:
            print(f"‚ö†Ô∏è Skipped ({response.status_code}): {url}")
    except Exception as e:
        print(f"‚ùå Error downloading {url}: {e}")

# Download with progress bar
print(f"üì¶ Downloading images from {start_index + 1} to {start_index + num_images}")
for i, link in enumerate(tqdm(image_links_batch, desc="Downloading")):
    download_image(link, save_folder, i + start_index)

print("‚úÖ Download complete!")